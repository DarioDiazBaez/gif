{"version":3,"sources":["Components/AddCategory.js","Helpers/getGigs.js","Components/GifGridItem.js","Components/GifGrid.js","Hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","className","onSubmit","e","preventDefault","trim","length","catgs","type","placeholder","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","style","width","href","src","alt","height","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"oNAKaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEVC,mBAAS,IAFC,mBAEvCC,EAFuC,KAE3BC,EAF2B,KAiB9C,OAEJ,0BAAMC,UAAU,oDAAoDC,SAX3C,SAAEC,GACnBA,EAAEC,iBAEEL,EAAWM,OAAOC,OAAS,IAC/BT,GAAe,SAAAU,GAAK,OAAMR,GAAN,mBAAqBQ,OACzCP,EAAc,OAOpB,2BACEQ,KAAK,OACLP,UAAU,eACVQ,YAAY,MACZC,MAAQX,EACRY,SArB0B,SAAER,GACxBH,EAAeG,EAAES,OAAOF,Y,uBCRnBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbC,EADa,iDACmCC,UAAWH,GAD9C,+DAEAI,MAAOF,GAFP,cAEbG,EAFa,gBAGEA,EAAKC,OAHP,uBAGZC,EAHY,EAGZA,KACDC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAM,CACFC,GAAGD,EAAIC,GACPC,MAAMF,EAAIE,MACVV,IAAG,UAACQ,EAAIG,cAAL,aAAC,EAAYC,iBAAiBZ,QARtB,kBAYZM,GAZY,4CAAH,sDCCPO,G,KAAc,SAAC,GAAoB,IAAlBH,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAGjC,OACI,yBAAKf,UAAU,yDAAyD6B,MAAO,CAACC,MAAO,UACnF,uBAAGC,KAAMhB,EAAKJ,OAAO,SAASX,UAAU,iCACpC,yBAAKA,UAAU,YAAYgC,IAAMjB,EAAMkB,IAAMR,EAAQA,MAAOA,EAAOI,MAAO,CAACC,MAAO,QAAQI,OAAQ,cCJrGC,EAAU,SAAC,GAAkB,IAAhBtB,EAAe,EAAfA,SAAe,ECFZ,SAACA,GAAc,IAAD,EAEbhB,mBAAU,CAChCuB,KAAM,GACNgB,SAAS,IAJ0B,mBAEhCC,EAFgC,KAEzBC,EAFyB,KAkBvC,OAXIC,qBAAW,WACP3B,EAASC,GACR2B,MAAM,SAAAC,GAECH,EAAU,CACVlB,KAAMqB,EACNL,SAAS,SAGlB,CAACvB,IAEDwB,EDd2BK,CAAc7B,GAAlCa,EAFuB,EAE7BN,KAAcgB,EAFe,EAEfA,QAEtB,OAEI,kBAAC,WAAD,KACI,wBAAIpC,UAAU,oDAAqDa,GAEjEuB,GAAW,uBAAGpC,UAAU,oCAAb,cACb,yBAAKA,UAAU,2EAEP0B,EAAOJ,KAAM,SAAAC,GAAG,OAChB,kBAAC,EAAD,eACIoB,IAAMpB,EAAIC,IACLD,UEbhBqB,EAAe,WAAO,IAAD,EAEM/C,mBAAS,CAAC,UAFhB,mBAEvBgD,EAFuB,KAEXjD,EAFW,KAI9B,OACI,yBAAKI,UAAU,8BACX,kBAAC,EAAD,CAAaJ,cAAgBA,IAC7B,6BAEIiD,EAAWvB,KAAI,SAAAT,GAAQ,OACnB,kBAAC,EAAD,CAAS8B,IAAK9B,EAAUA,SAAUA,UCZtDiC,IAASC,OAEP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.2ac3d8ed.chunk.js","sourcesContent":["\r\nimport React from 'react';\r\nimport { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ( {setCategories} ) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n    \r\n    const handleInputChange = ( e ) => {\r\n        setInputValue( e.target.value );\r\n    }\r\n\r\n    const handleSubmit = ( e ) => {\r\n        e.preventDefault();\r\n        //Validacion\r\n        if( inputValue.trim().length > 2 ){\r\n        setCategories( catgs => [ inputValue, ...catgs ]);\r\n        setInputValue('');    \r\n        }\r\n    }\r\n\r\n    return (\r\n\r\n<form className=\"input-group animate__animated animate__rubberBand\" onSubmit={ handleSubmit }>\r\n  <input \r\n    type=\"text\"\r\n    className=\"form-control\"\r\n    placeholder=\"GIF\"\r\n    value={ inputValue }\r\n    onChange={ handleInputChange }>\r\n  </input>\r\n</form>)}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}","\r\n//nos permite traer todas las imagenes de esa categoria\r\nexport const getGifs = async( category ) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI( category )}&limit=10&api_key=v4BZi5DlHSM3IIFUyyWlCOiGaMH6zR5S`\r\n    const resp = await fetch( url );\r\n    const {data} = await resp.json();\r\n    const gifs = data.map( img => {\r\n        return{\r\n            id:img.id,\r\n            title:img.title,\r\n            url:img.images?.downsized_medium.url\r\n        }\r\n    })\r\n    \r\n    return gifs;\r\n}","import React from 'react'\r\nimport \"../GifExpertApp.css\"\r\n\r\nexport const GifGridItem = ( {title, url} ) => {\r\n\r\n\r\n    return (\r\n        <div className=\" animate__animated animate__tada card mx-2 my-2 fondo2\" style={{width: \"18rem\"}}>\r\n            <a href={url} target=\"_blank\" className=\"d-flex justify-content-center\">\r\n                <img className=\"img-fluid\" src={ url } alt={ title } title={title} style={{width: \"100vw\",height: \"45vh\"}}/>\r\n            </a>\r\n        </div>\r\n    )\r\n}\r\n","\r\nimport React, { Fragment } from 'react'\r\nimport { useFetchGifs } from '../Hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n    const { data: images, loading } = useFetchGifs( category );\r\n\r\n    return (\r\n\r\n        <Fragment>\r\n            <h2 className=\"text-center animate__animated animate__heartBeat\">{ category }</h2>\r\n            \r\n            { loading && <p className=\"animate__animated animate__flash\">Loading...</p> }\r\n            <div className=\"card-grid d-flex align-content-stretch flex-wrap justify-content-center\">\r\n                 {\r\n                    images.map(  img =>(\r\n                    <GifGridItem \r\n                        key={ img.id }\r\n                        { ...img }\r\n                    />\r\n                    ) )\r\n                } \r\n            </div> \r\n        </Fragment>\r\n        \r\n    )\r\n}\r\n","import { useState, useEffect } from \"react\"\r\nimport { getGifs } from '../Helpers/getGigs';\r\n \r\n export const useFetchGifs = (category) => {\r\n     \r\n    const [state, setState] = useState( {\r\n        data: [],\r\n        loading: true\r\n    } );\r\n\r\n        useEffect( () => {\r\n            getGifs( category )\r\n            .then( imgs => {\r\n                    // console.log(imgs); \r\n                    setState( {\r\n                    data: imgs,\r\n                    loading: false\r\n                })\r\n            })\r\n        }, [category])\r\n\r\n    return state;\r\n }\r\n ","\r\nimport React, { Fragment, useState } from 'react';\r\nimport { AddCategory } from './Components/AddCategory';\r\nimport { GifGrid } from './Components/GifGrid';\r\nimport \"./GifExpertApp.css\"\r\n\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState(['Memes']);\r\n    \r\n    return (\r\n        <div className=\"container-fluid fondo py-3\">\r\n            <AddCategory setCategories={ setCategories } />\r\n            <div>\r\n                {\r\n                categories.map(category => (\r\n                    <GifGrid key={category} category={category} />\r\n                ))}\r\n            </div>\r\n        </div>)}\r\n\r\n\r\n        \r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { GifExpertApp } from './GifExpertApp';\r\n\r\n\r\nReactDOM.render(\r\n  \r\n  <GifExpertApp />,\r\n  document.getElementById('root')\r\n  \r\n);\r\n\r\n"],"sourceRoot":""}